// Mocks generated by Mockito 5.2.0 from annotations
// in cars/test/features/car/list/data/repositories/car_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:cars/features/car/list/data/data_source/car_data_source.dart'
    as _i2;
import 'package:cars/features/car/list/data/models/car_model.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [CarDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCarDataSource extends _i1.Mock implements _i2.CarDataSource {
  MockCarDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.CarModel>?> getCars() =>
      (super.noSuchMethod(Invocation.method(#getCars, []),
              returnValue: Future<List<_i4.CarModel>?>.value())
          as _i3.Future<List<_i4.CarModel>?>);
  @override
  _i3.Future<List<_i4.CarModel>?> getFilteredCars(
          List<int>? listBrandId, List<int>? listColorId) =>
      (super.noSuchMethod(
              Invocation.method(#getFilteredCars, [listBrandId, listColorId]),
              returnValue: Future<List<_i4.CarModel>?>.value())
          as _i3.Future<List<_i4.CarModel>?>);
}
